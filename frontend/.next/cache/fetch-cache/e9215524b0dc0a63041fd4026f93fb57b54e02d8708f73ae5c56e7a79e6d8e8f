{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000","content-type":"application/json; charset=utf-8","date":"Sun, 10 Mar 2024 09:52:31 GMT","server":"Caddy","transfer-encoding":"chunked"},"body":"[{"id":67,"name":"D/Generation HD","creator":"West Coast Software","description":"The year is 2021, and Genoq has become a leading corporation in bio-medical research. However the tower, some 90 stories high, is not all that it seems. Somewhere within the tower, highly illegal bio-weapons research has been conducted in secret. June 26th, disaster strikes and the lethal organic weapons have escaped and threaten not only the staff members stranded in the tower, but the world itself. You arrive on the 80th floor with an urgent package addressed to Derrida, the lead scientist at Genoq working on the bio-weapons research. Set back from your goal, you must climb the tower, assisting those in need or focusing solely on your task at hand, and stopping the virus from escaping the tower and threatening all life on the planet. Will you help the stranded survivors or hinder them? Can you deliver the package to Derrida in time? Can you prevent the impending catastrophe and escape with your life? Key Features New high res graphics New music by Mark 'TDK' Knight New control menu Can save at any point in the game Leaderboards Achievements Same great gameplay","genre":"Adventure, Puzzle","tags":"Singleplayer, Steam Achievements, Full controller support, Steam Leaderboards, Retro","image_link":"https://media.rawg.io/media/screenshots/5c4/5c41cb3b0d15ef0974f930898cedbc6c.jpg","ai_summary":"NULL","overall_rating":{"Float64":0.7142857142857143,"Valid":true},"num_reviews":{"Int16":7,"Valid":true}},{"id":68,"name":"Extreme Exorcism","creator":"Golden Ruby Games","description":"Extreme Exorcism is a paranormal platformer where every move you make comes back to haunt you. Take on the role of Mae Barrons; an Extreme Exorcist with extreme measures. Her supernatural skills are called upon when everything and everyone else has failed to rid a haunted house of its ghostly presence. Conventional methods won’t cut it with these ghosts. Instead, Mae comes armed with a deadly arsenal of ghost-busting weapons, from rocket launchers to razor sharp boomerangs. But these aren’t your average poltergeists. At the end of each round, a ghost appears and mimics your every move from the round before. The longer you survive the more extreme the game becomes. Engage in non-stop ghost annihilation in 10 eerie areas of the haunted house – each room presenting its own hellish hazard. Brave the winds on the balcony and the fire in the kitchen, surviving for as long as you can. With a devilish local multiplayer – you can play co-op or deathmatch modes with up to 3 of your friends, and with 50 unique challenges even the most daring Extreme Exorcist will be put to the test.","genre":"Action, Adventure, Casual, Indie","tags":"Singleplayer, Steam Achievements, Multiplayer, Full controller support, steam-trading-cards, Co-op, cooperative, 2D, Horror, Steam Leaderboards, Split Screen, Pixel Graphics, stats","image_link":"https://media.rawg.io/media/screenshots/67d/67d0e74fd74fd2ea9b847856fb388736.jpg","ai_summary":"NULL","overall_rating":{"Float64":6.5,"Valid":true},"num_reviews":{"Int16":2,"Valid":true}},{"id":69,"name":"Toto Temple Deluxe","creator":"Juicy Beast Studio, Juicy Beast","description":"\"Toto Temple Deluxe is near perfect and delivers an amazing party experience\" - Rares Gruian (8WorldsNews) \"It's simple and addictive - what a multiplayer game should be.\" - Mysterious Indiecade Judge \"It's fun, it's crazy, and you'll undoubtedly be yelling.\" - Alpha (N4G) \"It is stupidly fun. You'll likely find yourself standing in front of the screen, yelling at your fellow goat stealers and jostling them in real life.\" - Dan Tynan (Yahoo) Toto Temple Deluxe is a fast-paced, local-multiplayer king-of-the-hill style game in which players must steal an egg-laying goat from their friends and try to keep it on their own head for as long as possible. You know, normal stuff. Dashing Gameplay Infinitely dash in any direction to swiftly move around and powerfully headbutt the goat carrier to steal its four-legged booty. Escape your jealous opponents and protect the goat by blocking their attacks with a well-timed shield pop! You’ll \"get their goat\", guaranteed. Classic Mode Prove you’re the ultimate shepherd in Classic mode: Gather 3k points first by holding on to the goat, collecting coins hatched from goat eggs (yeah… don’t ask) and harnessing the power of powerful power-ups! Play as teams or in free-for-all. Bomb Mode Blast everyone’s face off in Bomb mode: Be the first to grab the explosive goat (we know, stop interrupting us) and keep it long enough for it to detonate near your soon-to-be-dead rivals. Lose the goat and the timer resets! Play as teams or in free-for-all. Temples Each temple offers a unique, exploitable mechanic for you to discover. Use them wisely and outsmart your opponents like they don’t even... what?… how did you..? Bots Bots will play with you whenever you want and for as long as you want. They never complain. They also never open up your fridge and ask if they can eat that pizza slice you got left from last night. Bots are awesome. Oh, and you can change their difficulty level too, because they will probably kick your ass-tonishing little bottom.","genre":"Action, Casual, Indie","tags":"Singleplayer, Steam Achievements, Multiplayer, Full controller support, Steam Cloud, Co-op, Steam Leaderboards, Split Screen, Local Co-Op, Local Multiplayer, stats, 4 Player Local, party","image_link":"https://media.rawg.io/media/screenshots/0af/0afe1ce86536d751f22ad77544d2293c.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":70,"name":"Penarium","creator":"Team17 Digital, Self Made Miracle","description":"Penarium is set in a sinister circus arena, where contestants, much like Gladiators of old, are forced to entertain a sadistic crowd. In this frantic 2D arena arcade game, you take on the role of our quirky antihero; Willy who, to survive, is forced to run, jump and avoid an array of killer death-traps. Succeed and Willy will become the Champion of Penarium. Fail and he will die in a most horrendous way, much to the delight of the baying crowd. Guide poor Willy through this evil madness in single player and 2 player local COOP and Competitive modes. Every kid wants to go to circus but no kid wants to die in one.Feature List 3 Arenas 4 Game Modes Campaign mode featuring 30 challenges Arcade mode featuring over a dozen of unlockable power-ups COOP and VS local multiplayer Online leaderboards Dark comical dialogue and cutscenes","genre":"Action, Arcade, Casual, Indie","tags":"Singleplayer, Steam Achievements, Full controller support, Steam Cloud, steam-trading-cards, Funny, Steam Leaderboards, Difficult, Split Screen, Pixel Graphics","image_link":"https://media.rawg.io/media/screenshots/68b/68b6ea983d6145fad13c5300c2dd8a9e.jpeg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":71,"name":"Standpoint","creator":"Unruly Attractions","description":"A labyrinth fades into view; a space you control but that holds you. Completely lost with nowhere else you could be. Standpoint is a first-person puzzle platformer where the player possesses the ability to change the orientation of the world.  Explore the labyrinth-like environment, solving puzzles and collecting secrets, in order to overcome the stages of Grief.  And ask yourself, do the narrator's cryptic clues to the world hide some deeper sentiment? With every wall potentially the floor, take advantage of the variety of ways to approach obstacles. Turn a perilous corridor of lasers into a simple pit. Break through barriers as you drift through the tunnels.  Even use death to your advantage.  When up can become down at any moment, will you fly or fall?Key Features:Explore physical manifestations of the stages of grief, as your environment changes to reflect the emotions Ponder puzzles which need a whole new way of thinking Experience the dynamic soundtrack as it reacts to your movements Take advantage of game elements to conquer the time-trial Leaderboards.","genre":"Action, Indie","tags":"Singleplayer, Steam Achievements, Full controller support, Steam Cloud, First-Person, Steam Leaderboards","image_link":"https://media.rawg.io/media/screenshots/238/238b1d15ead30bfa1c76e3dad6365554.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":72,"name":"Kaiju Panic","creator":"mechabit","description":"Kaiju Panic is an Action-Strategy game with a bright and unique art style where you have to rescue survivors and guide them to the safety while defending against the giant monster Kaiju. Take control of the field commander. Build, fight and rescue your way through a wide variety of locations around the world. A massive meteorite has struck the Earth causing devastation and panic in the streets, you scramble to the impact zone to search the area for survivors and survey the extent of the damage caused. But as if a meteorite wasn't enough, giant monsters called Kaiju start appearing around the world and begin rampaging in densely populated cities! Jet across the globe as you respond to Kaiju attacks and bizarre natural disasters and unusual weather phenomenon. Rescue every civilian to unlock their ID cards which you can view along with a monster bestiary and tech tree. Progress through a full story campaign to discover the true origin of the Kaiju. Music by the talented Martin Gratton (http://www.martingratton.co.uk/)","genre":"Action, Strategy, Indie","tags":"Singleplayer, Steam Achievements, Full controller support, Steam Cloud, steam-trading-cards, stats, Tower Defense","image_link":"https://media.rawg.io/media/screenshots/e87/e87ca7b852ebef2ab25dde2f62885258.jpg","ai_summary":"NULL","overall_rating":{"Float64":3.7,"Valid":true},"num_reviews":{"Int16":0,"Valid":false}},{"id":73,"name":"Laserlife","creator":"Choice Provisions","description":"Remember what it means to be a human in this interactive biography of a dead astronaut found in deep space by future intelligences who have no concept of humankind. With technology far beyond human comprehension, the discoverers of the astronaut use lasers to build physical replicas of the astronaut’s long-dead memories in hopes to understand what this strange creature was and why they are floating through space alone. By controlling dual lasers with both analog sticks, players will: Collect Memory molecules scattered around the mysterious space ship Harmonize the Astronaut’s memories within the Astronaut’s metaphysical plane Warp back to reality through the Astronaut’s subconscious, avoiding mental blocks Energize the dead Astronaut so it can create physical manifestations of its memoriesLaserlife is meant to be played in one sitting, so turn down the lights, turn up the volume, and get lost in this existential adventure about what it means to be a human. *Laserlife requires either an Intel® RealSense™ Camera or a controller in order to play*","genre":"Action, Indie","tags":"Singleplayer, Steam Achievements, Full controller support, Steam Cloud, steam-trading-cards, Steam Leaderboards, stats, Music, Rhythm","image_link":"https://media.rawg.io/media/screenshots/7fc/7fc2823632067ce1306495739708e0ef.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":74,"name":"Instant Indie Collection: Vol. 2","creator":"Curve Digital","description":"\"Hack, steal and sneak your way around victorian steampunk London in The Swindle, explore space in a quest to rescue 111 scientists caught in the aftermath of the universe's greatest experiment in Nova-111, and throw down your best stunts and tricks to become the ultimate BMX star in Pumped BMX +. This star- studded second volume in the Instant Indie Collection series is the perfect way to explore the very best of indie. Experience over 25 hours of some of the most well-known and loved indie games available. This Pack includes: The Swindle Nova-111 Pumped BMX +","genre":"","tags":"Space, Steampunk, collection, bundle","image_link":"https://media.rawg.io/media/screenshots/76a/76a2e1f803267a80fcc2783ee1b84708.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":75,"name":"Line of Defense Tactics","creator":"3000AD","description":"Line Of Defense Tactics is a top-down combat shooter in which you command a team of four Galactic Command marines in a 16 mission campaign across space stations, starships and vast planetary battlefields. Train your team, upgrade their stats, weapons, inventory and abilities, to become the ultimate fighting force. The Xbox One version includes the Tactical Advantage DLC which includes a bonus skirmish mode, 1000 experience points, as well as exclusive weapons ( RT41 Shotgun, Hornet Rocket Launcher, Frag Grenade) and items (Portable Cloaking Unit, Combat Armor) which you can use to equip your team right from the start. * Action based storyline based on the Line Of Defense comics * Real time tactical combat with a persistent team of characters * Fight the enemy in ship to ship combat, inside their bases, and on the ground * Command infantry, autonomous androids, and vehicles to complete your missions * Call in airstrikes, deploy turrets, and gain access to advanced weaponry as you progress * Play the missions in any order after completing the campaign * Earn achievements as you play through the campaign","genre":"Action, RPG, Strategy, Indie","tags":"Singleplayer, RPG, Sci-fi, Tactical, stats, Space, combat, Top-Down, achievements, fight, Real Time Tactics, ship, defense, rocket, train","image_link":"https://media.rawg.io/media/screenshots/c13/c13a4eadef59e1be20cd509651cffa2f.jpeg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":76,"name":"G Prime Into The Rain","creator":"Soma Games","description":"A gravity gripping, Steampunk styled, moody-beautiful, slingshot simulating puzzle pleaser. G' is the first chapter in Soma Games’ Arc Saga and is a gorgeously rendered take on the classic gravity golf genre of puzzle games. Explore the vast uncharted mystery of The Rain, a solar-system spanning shock wave of gas and dust from far, far away. In your role as sounding officer onboard Ptolemy Station you configure and drive sub-etheric reconnaissance rockets into increasingly challenging fields where Iceteroids, theophosphorus and quicksand clouds make your mission much more work than your employers led you to believe… *** Gorgeous hand painted art, eerily atmospheric music and a deep, compelling storyline make G more than just a puzzle game. As the first chapter in a four part series, G' introduces you to a steampunk styled world where corporate intrigue and competing mercenaries all vie for their share of the unknown promise. The Rain - blessing or curse, its arrival changes human history for ever…and you will play a part. If you like Gravity Sling, Blast Off or Gears of Gravity, you’ll love this game! G' Prime is the 3D Arcade-Inbred update to Soma Games award-winning iOS game from 2008. Now rendered in marvelous 3D environments plus 7X the background and dialog, this is the game we WANTED to make back then… What people are saying about G': * \"A remarkable gravity puzzle game…\" -Access Xbox * \"Challenging to play, vexing to master, an all round enjoyable experience! Soma Games have certainly caught my attention with G Prime\" - 10lb. Gamer * \"A must buy if you like Puzzlers...Soma [has] done a grand job. G Prime is a solid puzzler, with a little more to think about than just aim and shoot.\" - Xbox Gamer Reviews * \"Fun and challenging, a nice concept, and totally unique, not like anything else out there\" - SMLpodcast * “Best game EVER!!!!!!!!!!!” -DeNmarK * “...wow, this looks gorgeous, the devs truly made an effort here....” - Sloblock2000 * “I loved playing this!” – Zamzee * “I already bought this game for Mac/PC and love it!” -cur33 * “I love the concept of this type of game it won of my guilty pleasures.” -Vermithraxprot * “Nice game ^^ so excited :)” -T-REKT","genre":"Simulation, Indie","tags":"Singleplayer, Steam Achievements, Partial Controller Support, Space, Physics, Steampunk, Music, fun, history, work, love, rain, Golf, Gravity","image_link":"https://media.rawg.io/media/screenshots/6f0/6f067f3df7605cf6acb792c2ed50c06e.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":77,"name":"Replay: VHS is not dead","creator":"Neko Entertainment, Team Replay","description":"REPLAY: VHS IS NOT DEAD is a platform game in which you control time in a brand new way. Control up to 5 different characters and synchronize their actions to complete each level. Take on the role of film director and travel through several humorous movies in REPLAY: VHS IS NOT DEAD! Each level is full of surprises and will have you racking your brains. Are you ready? Then... Silence on the set... Camera... Action! Accessible gameplay: In REPLAY: VHS IS NOT DEAD, you cannot lose. Don't like a scene? Cut! Take two! Game duration: Over 70 levels in 4 different film universes, medals, costumes, hidden keys... Retro look: 80s-style artwork and a soundtrack worthy of the great Hollywood classics.","genre":"Puzzle, Platformer","tags":"puzzles, tv, pixel-art, vhs","image_link":"https://media.rawg.io/media/screenshots/be1/be1eaee746ec7f72689b08e6d458c6ed.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":78,"name":"Ironcast","creator":"Dreadbit","description":"Inspired by Victorian era science fiction writers such as H.G. Wells and Jules Verne,  Ironcast is set in an exciting alternative history; a time when refined men and women in top hats and bonnets commanded gigantic walking war machines, laying waste to the enemies of the British Empire! Take control of a 7 meter tall walking vehicle called an Ironcast and face off against an invading force of enemy Ironcast in order to defend 1880's Victorian England. Battles are fought by generating resource nodes which in turn drive the Ironcast's various weapons and systems. You must choose how to spend these nodes wisely, either offensively in order to cripple and destroy your opponents, or defensively, if they suspect a barrage of incoming weapons fire is due.Features:Turn based strategy combat set against a rich and interesting alternate 1880's history. Roguelite campaign mode where death is permanent but with persistent rewards from one game session to the next. Drive back the invading forces and press forth for victory! Hand painted art style. Inspired by the steampunk genre and Victorian science fiction. Loot new technology and upgrade abilities from the wrecks of fallen enemies. Customise your Ironcast with a range of unique weapons and defensive systems. Over 50 different unlockable items will ensure an almost limitless number of combinations. Passive Augmentations allow players to modify their Ironcast's weapons and abilities. For PC, Mac and Linux.","genre":"RPG, Strategy, Indie","tags":"Singleplayer, Steam Achievements, Steam Cloud, steam-trading-cards, RPG, Roguelike, Roguelite, Steampunk, puzzles, Perma Death, Mechs, Match 3","image_link":"https://media.rawg.io/media/screenshots/14e/14e7221cce4949fd9ea8a5e9ea047851.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":79,"name":"MagNets: Fully Charged","creator":"Total Monkery","description":"Polarity City is under threat: the Bloxbots have gone rogue! Usually rather stupid, Polarity City's favourite maintenance cubes have suddenly become dangerous. Far from fixing things, the Bloxbots are destroying everything in sight... and why do they even HAVE lasers, anyway? Only you can stand between them and chaos, and only you can discover who is behind this dastardly plan... MagNets is an intense arena-based collect-em-up. Recycle Bloxbots and save the day in 20 levels and 4 zones, plus challenge levels, online leaderboards and local multiplayer.","genre":"","tags":"Multiplayer, Robots, online, city, challenge, lasers, cubes, small","image_link":"https://media.rawg.io/media/screenshots/c48/c48afe86eb31d9b8f912eb533d2fdcd2.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":80,"name":"Tetrobot and Co.","creator":"Swing Swing Submarine, Neko Entertainment","description":"Tetrobot is the world's most popular and reliable robot, but he's not perfect. That's why I, Maya, have built him a microscopic little brother, Psychobot. Help me guide Psy through Tetrobot's cogs and circuits: by swallowing blocks of matter and spitting them out, we can repair anything. Learn how pipes, lasers, fans and other electronic devices work, learn how to alter the chemical properties of slime, and collect all the memory blocks that you find on the way. The owners of damaged Tetrobots all around the world rely on us because we are the only people who can repair their precious robots.Key FeaturesPure puzzle gameplay for gamers who like to give their minds a workout. Over 50 levels to play and even more secrets to unlock. Original music composed by Morusque (Knytt Stories, Saira, Blocks That Matter, Exodus) Find out what became of Tetrobot, Alexey, Markus and Maya, 15 years after \"Blocks That Matter.\" Steam FeaturesSteam Achievements: An even greater challenge for avid gamers. Steam Cloud: Start a game at home, finish it at work (if you're careful). Steam Workshop: Create your own puzzles and share them in one click (available soon).","genre":"Action, Strategy, Casual, Indie, Puzzle","tags":"Singleplayer, Steam Achievements, Full controller support, Steam Cloud, steam-trading-cards, controller support, Robots, puzzles","image_link":"https://media.rawg.io/media/screenshots/792/792efebdeb29cb4492d30a963eb38440.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":81,"name":"Gryphon Knight Epic","creator":"Cyber Rhino Studios, Desenvolvimento Software - ME","description":"Gryphon Knight Epic is a 2D Medieval Shoot’em up that mixes elements from classical shoot’em ups, exploration and duel-like boss battles, it tells the story of Sir Oliver and Aquila, an accomplished knight and his loyal gryphon that are forced back to adventure once again. Sir Oliver have already defeated a dragon, married a princess and saved the kingdom. But during his quest he will face adversaries he never imagined he would, because… in reality all of them were once friends. What happened? These heroes would never go rogue… and all at once? Something is rotten in the kingdom and its up to Oliver discover what. Fight your way through 8 hand-crafted levels Duel with challenging bosses and get their weapons Explore the stages to find equipment for your character and bits of ancient lore of the world Enjoy challenging gameplay and pixel art graphics, just like old times Windows, Mac, \u0026 Linux versions with Gamepad support","genre":"Action, Shooter, Indie","tags":"Singleplayer, Steam Achievements, Full controller support, Steam Cloud, steam-trading-cards, 2D, Fantasy, Steam Leaderboards, Pixel Graphics, stats, Medieval, Shoot 'Em Up","image_link":"https://media.rawg.io/media/screenshots/f8e/f8e506312e2bc8e3ba5cd2c5dd93f81e.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":82,"name":"Cubikolor","creator":"Moving Player, MOVING PLAYER SAS, Fractal Box","description":"Immerse yourself in the world of Cubikolor! Move your Kube by matching the kolors of the sides and the platform to complete each level. Armed only with your logic and your Kube, move through the 150 levels outwitting the traps in the System, an evil, scheming entity, to confront the machine and pass the test! Discover lots of special Kubes with some surprising effects, and advance through the different game backdrops in Classik or Hardkore mode. In Cubikolor your logic will be severely tested against a formidable enemy. Roll, go up, go down and rewind time to explore all the options and reach the locks in each level. Keep an eye on the time and move limits! Outsmart the System and use its traps to your advantage: Booby-trapped Kubes, multikolored Kubes and many more await you in this next-gen puzzle game. Win all the medals and challenge yourself in Hardkore mode. Only the best will survive. Will you achieve the highest score? A puzzle game with innovative gameplay in full 3D 50 levels, 2 game modes, numerous objectives and 450 medals to be won Discover lots of special Kubes A kolorful and twilight world with ever-changing levels Progressive and immersive music, turn on the sound! Over 20 hours of gameplay fun against a cunning and ruthless Program A Hardkore challenge even for the best among you! Will you achieve the best times? Share your results! Cubikolor - Originality Award at the European Indie Game Days 2015 Cubikolor is a co-production between independent studios Fractal Box and Moving Player","genre":"Casual, Indie, Puzzle","tags":"Singleplayer, Steam Achievements, Full controller support, Steam Cloud","image_link":"https://media.rawg.io/media/screenshots/1a9/1a9f734ca0f9524d3f42a796ee9c154a.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":83,"name":"White Knight Chronicles II","creator":"Level 5, D3 Publisher","description":"*Online server will be shut down on 6/18/13. White Knight Chronicles™ II is an epic high production RPG with stunning visuals and over 30 hours of original gameplay.  This follow up to the original White Knight Chronicles includes new features and the return of its signature combination of single and multiplayer role playing.  Experience the thrilling finale and awaken to your true calling as you unlock the true powers of the Incorruptus, a giant powerful knight from the ancient Dogma wars.","genre":"Action, RPG","tags":"Multiplayer, RPG, exclusive, true exclusive, online, ancient","image_link":"https://media.rawg.io/media/screenshots/6cc/6cc8a451fcd808eb7fb13b2495fa585f.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":84,"name":"WET","creator":"Bethesda Softworks, Artificial Mind and Movement, Movement, Artificial Mind","description":"A highly-stylized third person shooter than seamlessly blends gun play, swords skills and over-the-top acrobatics to create the ultimate interactive action experience. The game allows you to shoot anywhere. Anytime. You have the freedom to shoot while running, sliding down ladders, sliding across the floor, or performing any number of acrobatic moves. Featuring an ironic mix of humor, violence, and unique retro visual treatment.","genre":"Action, Shooter","tags":"Retro, humor, shoot, gun, Swords","image_link":"https://media.rawg.io/media/games/b55/b55dc9ad1401dae88843e102936df120.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":85,"name":"DiRT 4","creator":"Feral Interactive, Codemasters","description":"Motorsport by its very nature is dangerous. DiRT 4 is all about embracing that danger. It’s about the thrill, exhilaration and adrenaline that is absolutely vital to off-road racing. And more than that, it’s about loving that feeling. It’s about pushing flat out next to a sheer cliff drop. Going for the gap that’s slightly too small. Seeing how much air you can get in a truck. They call it ‘being fearless’. DiRT 4 also features a game-changing system called Your Stage; an innovative rally route creation tool that allows you to produce an almost-infinite number of unique stages at the press of a button. You choose your location and set the route parameters, then Your Stage does the hard work to create a unique rally stage that you can race, share with your friends and then challenge them to beat your time. Your Stage allows experienced rally players to create longer, more technical routes, whilst newcomers can create simpler shorter routes as they hone their skills. With DiRT 4, Codemasters have sought to bring the levels of thrill from last year’s DiRT Rally with the fearless excitement, accessibility and adrenaline-fueled races previously seen in its critically acclaimed prequels DiRT 2 and DiRT 3. Featuring classic rally racing that continues to build on the foundations set by the Colin McRae Rally games, the bruising contests from the official FIA World Rallycross Championship, the crazy battles of racing trucks and buggies, and the outrageous fun of open events in Joyride, players will face challenges from locations that span three continents. • OVER 50 OF THE MOST BREATH-TAKING OFF-ROAD CARS EVER BUILT – Including Ford Fiesta R5, Mitsubishi Lancer Evolution VI, Subaru WRX STI NR4 and Audi Sport quattro S1 E2 • 5 INCREDIBLE RALLY LOCATIONS WITH MILLIONS OF ROUTES – Australia, Spain, Michigan, Sweden \u0026 Wales • THE OFFICIAL GAME OF THE FIA WORLD RALLYCROSS CHAMPIONSHIP – Race at Montalegre, Lohéac Bretagne, Hell, Holjes \u0026 Lydden Hill in a multitude of different series • LANDRUSH – Short-course dirt track racing in Pro Buggies, Pro-2 Trucks, Pro-4 Trucks and Crosskart vehicles in California, Nevada and Mexico • JOYRIDE - Laptime challenges, smash challenges, free-play area and send challenges to friends • DiRT ACADEMY – Taking place at the DirtFish Rally School in Washington, USA, learn the skills, techniques and practice to become the best! • CAREER MODE – create your driver, compete across the disciplines, gain sponsors and build your team with clear goals and rewards • COMPETITIVE GAMING – Daily, weekly and month-long challenges against fellow players from around the world • NEXT GENERATION OF RACENET – Live ladder, leagues and tournaments, cross-platform leaderboards, enhanced CREST telemetry system • TUNING – Tweak your set-up based on vehicle, track and weather conditions to best suit your racing style • DAMAGE \u0026 REPAIRS – Wear and tear is faithfully recreated with an improved and realistic damage model. Damage can be repaired by hiring Engineers to work in the team’s Service Area between stages but with a finite amount of time available.","genre":"Sports, Racing","tags":"Singleplayer, Steam Achievements, Multiplayer, Full controller support, Steam Cloud, Atmospheric, steam-trading-cards, Online multiplayer, Realistic, Valve Anti-Cheat enabled, Driving, Offroad","image_link":"https://media.rawg.io/media/games/b30/b30ea243cef7c8f3cd498c103c29eda7.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}},{"id":86,"name":"Farpoint","creator":"Impulse Gear","description":"Farpoint is a riveting VR space adventure set on a hostile alien planet. On a mission to pick up scientists studying an anomaly near Jupiter, a sudden rupture nearby sends you and their station crashing onto an unknown alien world. Separated from your colleagues, you must use holographic logs scattered throughout the landscape to reunite with the scientists and escape the planet. Explore and discover the secrets of the planet, blasting your way through hordes of indigenous and alien life as you keep moving to survive. •    Experience a full-length single player campaign as you traverse an unnerving alien world, searching for survivors and a way home. •    Master various weapons – from charged plasma rifles to a railgun - in the fight through packs of hostile alien life. •    Explore and fight together with a friend in 2 player online co-op.* *Active PS Plus membership required. VR Games may cause some players to experience motion sickness. Use of PSN and SEN account are subject to the Terms of Service and User Agreement and applicable privacy policy (see terms at sonyentertainmentnetwork.com/terms-of-service \u0026 sonyentertainmentnetwork.com/privacy-policy). Online features may be terminated at any time. *Online multiplayer requires a PlayStation®Plus membership. Online Play (Optional) PlayStation®VR Required PlayStation®Camera Required Enhanced play with 1 PS VR Aim controller Software subject to license (us.playstation.com/softwarelicense). Online features require an account and are subject to terms of service and applicable privacy policy (playstationnetwork.com/terms-of-service \u0026 playstationnetwork.com/privacy-policy). One-time license fee for play on account’s designated primary PS4™ system and other PS4™ systems when signed in with that account. Playstation®4 system, PlayStation®VR and PlayStation®Camera are required to experience VR functionality. ©2017 Sony Interactive Entertainment LLC. Farpoint is a trademark of Sony Interactive Entertainment LLC. Created and developed by Impulse Gear, Inc. All trademarks are the property of their respective owners. Appearance in this game does not imply sponsorship or endorsement.","genre":"Shooter","tags":"exclusive, VR, true exclusive","image_link":"https://media.rawg.io/media/games/fd3/fd3ba352de494fe390dfe53d326c646a.jpg","ai_summary":"NULL","overall_rating":{"Float64":0,"Valid":false},"num_reviews":{"Int16":0,"Valid":false}}]","status":200,"url":"https://18.216.152.159.nip.io/game/getGames"},"revalidate":31536000,"tags":[]}